apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: "org.jlleitschuh.gradle.ktlint"
apply plugin: "com.github.panpf.maven.publish"

ktlint {
    version = "0.41.0"
}

//tasks.withType(PluginUnderTestMetadata).configureEach {
//    // for test kit tests
//    pluginClasspath.from(configurations.compileOnly)
//}

mavenPublish {
    sonatypeHost = "S01"
}

sourceCompatibility = JavaVersion.VERSION_1_8

//test {
//    testLogging {
//        events "passed", "skipped", "failed"
//        exceptionFormat "full"
//    }
//}

dependencies {
    api gradleApi()
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    compileOnly "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
    compileOnly "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    compileOnly "com.android.tools.build:gradle:$agpVersion"

    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"

    testImplementation gradleTestKit()
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation 'com.github.stefanbirkner:system-rules:1.19.0'
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    // for non test kit tests
    testImplementation "com.android.tools.build:gradle:$agpVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    testImplementation "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
}
